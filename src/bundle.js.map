{"version":3,"sources":["webpack://netflix/./src/components/FilmCard/FilmCard.pug","webpack://netflix/./src/components/SuggestionBar/SuggestionBar.pug","webpack://netflix/./src/components/SuggestionCard/SuggestionCard.pug","webpack://netflix/./src/components/Underline/Underline.pug","webpack://netflix/./src/views/HomeView/HomeView.pug","webpack://netflix/./node_modules/pug-runtime/index.js","webpack://netflix/webpack/bootstrap","webpack://netflix/webpack/runtime/compat get default export","webpack://netflix/webpack/runtime/define property getters","webpack://netflix/webpack/runtime/hasOwnProperty shorthand","webpack://netflix/./src/modules/eventBus.js","webpack://netflix/./src/views/BaseView/BaseView.js","webpack://netflix/./src/views/LogIn/LogIn.js","webpack://netflix/./src/modules/isValidForm.js","webpack://netflix/./src/consts/urls.js","webpack://netflix/./src/modules/adapters.js","webpack://netflix/./src/modules/http.js","webpack://netflix/./src/models/logIn.js","webpack://netflix/./src/controllers/controller.js","webpack://netflix/./src/models/signUp.js","webpack://netflix/./src/views/SignUp/SignUp.js","webpack://netflix/./src/models/profile.js","webpack://netflix/./src/views/Profile/Profile.js","webpack://netflix/./src/models/homePage.js","webpack://netflix/./src/views/HomeView/HomeView.js","webpack://netflix/./src/models/detailPage.js","webpack://netflix/./src/views/DetailView/DetailView.js","webpack://netflix/./src/consts/events.js","webpack://netflix/./src/consts/routes.js","webpack://netflix/./src/main.js","webpack://netflix/./src/controllers/signUp.js","webpack://netflix/./src/controllers/logIn.js","webpack://netflix/./src/controllers/profile.js","webpack://netflix/./src/controllers/homePage.js","webpack://netflix/./src/controllers/detailPage.js","webpack://netflix/./src/modules/router.js"],"names":["pug","module","exports","locals","pug_interp","pug_html","locals_for_with","i","attr","id","href","movieAvatar","alt","escape","title","stars","description","call","this","undefined","status","pug_mixins","cardFilms","isAuthorized","newFilms","newSeries","headerIcons","push","className","headerLinks","$$obj","length","pug_index0","$$l","pug_index1","classes","block","attributes","pug_index2","content","pug_index3","pug_has_own_property","Object","prototype","hasOwnProperty","pug_classes","val","escaping","Array","isArray","classString","padding","escapeEnabled","pug_escape","pug_classes_array","key","pug_classes_object","pug_style","out","style","pug_attr","escaped","terse","type","toJSON","JSON","stringify","indexOf","replace","merge","pug_merge","a","b","arguments","attrs","valA","concat","valB","obj","pug_match_html","_html","html","regexResult","exec","lastIndex","result","index","charCodeAt","substring","rethrow","pug_rethrow","err","filename","lineno","str","Error","window","message","context","lines","start","end","encoding","split","Math","max","min","ex","slice","map","line","curr","join","path","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","prop","eventBus","constructor","_listeners","on","event","callback","Map","set","name","off","delete","emit","data","forEach","listener","BaseView","_data","LogInView","super","template","puglatizer","views","LogIn","APPLICATION","setEventListeners","form","document","getElementsByTagName","aTag","getElementsByClassName","formHandler","preventDefault","getElementById","value","aTagHandler","addEventListener","removeEventListener","render","isValidForm","inputs","querySelectorAll","input","error","textContent","classList","remove","isValid","errorDiv","add","isValidEmail","isValidLogin","isValidPassword","isValidConfirmPassword","isValidName","loginInput","test","nameInput","emailInput","passwordInput","confirmPasswordInput","password","currentUrl","URLS","pages","main","profile","api","me","media","logout","login","signup","topFilmsAndSeries","arrayContentToNewFilmsSeries","arrayContent","newFilmsSeries","reduce","_","jsonFilm","movie_avatar","is_free","sendRequest","async","url","method","body","response","fetch","mode","credentials","parsedJson","json","getCurrentUser","params","responseStatus","responseBody","LogInModel","email","postUserForLogin","then","responseFlag","catch","loginUser","SignUpModel","confirmPassword","username","confirm_password","postUserForSignUp","signUpUser","SignUpView","SignUp","ProfileModel","idUser","getProfile","user_avatar","avatar","avatarInput","files","formPut","FormData","append","avatarSrc","postAvatar","patchProfile","updateAvatar","updateProfileInfo","getInfoAboutCurrentUser","getInfoForProfile","saveChanges","ProfileView","components","Loader","profileData","ProfileContent","querySelector","innerHTML","src","nick","button","disabled","imgAvatar","imgHandler","renderProfileInfo","renderNewAvatar","updateProfile","HomePageModel","arrayFilms","filmCards","repeat","rating","arrayFilmsToFilmCards","top","getTopFilmsAndSeries","getNewFilms","getNewSeries","Promise","all","values","topFilmsAndSeriesValue","newFilmsValue","newSeriesValue","getLogout","getInfoForHeader","getMainPageContent","HomePageView","HomeView","Header","header","outerHTML","HomeContent","ErrorPage","removeAllListeners","profileLink","profileLinkHandler","loginPage","loginPageHandler","logoutPage","logoutPageHandler","aMain","aMainHandler","topFilmSeriesHandler","scrollTo","removeEventListeners","target","closest","substr","newFilmSeriesHandler","filmContainer","renderHeader","setEventListenersForHeader","renderContent","renderErrorPage","DetailPageModel","filmId","film","filmJsonToFilm","getDetailFilmPage","getInfoAboutFilm","DetailPageView","filmData","DetailForm","renderDetailsAboutFilm","signupController","Controller","model","view","loginController","profileController","homePageController","detailPageController","app","application","routes","currentController","onPathChanged","bind","back","forward","dataset","routlink","changeRoute","register","controller","routeObject","go","location","pathname","search","getRouteData","targetController","getParam","console","log","match","resourceId","pathParams","reg","RegExp","URL","origin","routeData","Routes","history","pushState"],"mappings":"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","file":"bundle.js","sourcesContent":["var pug = require(\"!../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;;\n    var locals_for_with = (locals || {});\n    \n    (function (i) {\n      pug_html = pug_html + \"\\u003Cdiv\" + (\" class=\\\"item__film-card\\\"\"+pug.attr(\"id\", 'top' + i.id, true, true)+pug.attr(\"href\", i.href, true, true)) + \"\\u003E\\u003Cdiv class=\\\"item__image\\\"\\u003E\\u003Cimg\" + (pug.attr(\"src\", i.movieAvatar, true, true)+pug.attr(\"alt\", i.alt, true, true)) + \"\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__details\\\"\\u003E\\u003Cdiv class=\\\"item__film-card__title\\\"\\u003E\\u003Ca href=\\\"#\\\"\\u003E\" + (pug.escape(null == (pug_interp = i.title) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__film-card__stars\\\"\\u003E\" + (pug.escape(null == (pug_interp = i.stars) ? \"\" : pug_interp)) + \"\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__film-card__description\\\"\\u003E\" + (pug.escape(null == (pug_interp = i.description) ? \"\" : pug_interp)) + \"\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__film-card__buttons\\\"\\u003E\\u003Cdiv class=\\\"item__button-title\\\"\\u003EСмотреть\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\n    }.call(this, \"i\" in locals_for_with ?\n        locals_for_with.i :\n        typeof i !== 'undefined' ? i : undefined));\n    ;;return pug_html;};\nmodule.exports = template;","var pug = require(\"!../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003Cdiv class=\\\"item__suggestion-bar\\\"\\u003E\\u003Cdiv class=\\\"item__suggestion-button\\\"\\u003E\\u003Cdiv class=\\\"items__container\\\"\\u003E\\u003Cimg class=\\\"item__image\\\" src=\\\"..\\u002F..\\u002Fassets\\u002Fsubscription.png\\\" alt=\\\"\\\"\\u003E\\u003Cdiv class=\\\"item__title\\\"\\u003EОформить подписку\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__suggestion-button\\\"\\u003E\\u003Cdiv class=\\\"items__container\\\"\\u003E\\u003Cimg class=\\\"item__image\\\" src=\\\"..\\u002F..\\u002Fassets\\u002Ffindmedia.png\\\" alt=\\\"\\\"\\u003E\\u003Cdiv class=\\\"item__title\\\"\\u003EПодборка медиа\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;","var pug = require(\"!../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;;\n    var locals_for_with = (locals || {});\n    \n    (function (i) {\n      pug_html = pug_html + \"\\u003Cdiv\" + (\" class=\\\"item__internal\\\"\"+pug.attr(\"id\", 'suggest' + i.id, true, true)) + \"\\u003E\\u003Cimg\" + (\" class=\\\"item__suggestion__image\\\"\"+pug.attr(\"src\", i.movieAvatar, true, true)+pug.attr(\"alt\", i.alt, true, true)) + \"\\u003E\\u003Cdiv class=\\\"item__suggestion__title\\\"\\u003E\\u003Ca href=\\\"#\\\"\\u003E\" + (pug.escape(null == (pug_interp = i.title) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__suggestion__status\\\"\\u003E\\u003Cdiv\\u003E\" + (pug.escape(null == (pug_interp = i.status) ? \"\" : pug_interp)) + \"\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\n    }.call(this, \"i\" in locals_for_with ?\n        locals_for_with.i :\n        typeof i !== 'undefined' ? i : undefined));\n    ;;return pug_html;};\nmodule.exports = template;","var pug = require(\"!../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003Cdiv class=\\\"line-underheader\\\"\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;","var pug = require(\"!../../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;;\n    var locals_for_with = (locals || {});\n    \n    (function (cardFilms, isAuthorized, newFilms, newSeries) {\n      const headerIcons = [];\n\nif (isAuthorized) {\n    headerIcons.push(\n            {className: '', href: '/profile', title: 'Профиль', alt: ''},\n            {className: 'js-logout-page', href: '', title: 'Выйти', alt: ''}\n    );\n}\n\nconst headerLinks = [\n    {className: 'homePage js-home-link', href:'/home',  title: 'Главная'},\n    {className: 'filmPage js-films-link', href:'/movies', title: 'Фильмы'},\n    {className: 'serialsPage js-serials-link', href:'/serials', title: 'Сериалы'},\n    {className: 'lastPage js-latest-link', href:'/last', title: 'Последнее'}\n]\n\npug_html = pug_html + \"\\u003Cheader\\u003E\\u003Ca class=\\\"homePage js-home-link header-logo\\\" href=\\\"\\\"\\u003E\\u003Cimg src=\\\"..\\u002F..\\u002Fassets\\u002FRediotekaLogo.png\\\" alt=\\\"\\\"\\u003E\\u003C\\u002Fa\\u003E\\u003Cul class=\\\"header-form\\\"\\u003E\";\n// iterate headerLinks\n;(function(){\n  var $$obj = headerLinks;\n  if ('number' == typeof $$obj.length) {\n      for (var pug_index0 = 0, $$l = $$obj.length; pug_index0 < $$l; pug_index0++) {\n        var i = $$obj[pug_index0];\npug_html = pug_html + \"\\u003Cli\\u003E\\u003Ca\" + (pug.attr(\"href\", i.href, true, true)) + \"\\u003E\" + (pug.escape(null == (pug_interp = i.title) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\\u003C\\u002Fli\\u003E\";\n      }\n  } else {\n    var $$l = 0;\n    for (var pug_index0 in $$obj) {\n      $$l++;\n      var i = $$obj[pug_index0];\npug_html = pug_html + \"\\u003Cli\\u003E\\u003Ca\" + (pug.attr(\"href\", i.href, true, true)) + \"\\u003E\" + (pug.escape(null == (pug_interp = i.title) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\\u003C\\u002Fli\\u003E\";\n    }\n  }\n}).call(this);\n\npug_html = pug_html + \"\\u003C\\u002Ful\\u003E\";\nif (isAuthorized) {\npug_html = pug_html + \"\\u003Cdiv class=\\\"header-form__profile\\\"\\u003E\\u003Ca class=\\\"header-form__profile__link item__right-link js-search-button\\\"\\u003E\\u003Cimg src=\\\"..\\u002F..\\u002Fassets\\u002Fsearch.png\\\"\\u003E\\u003C\\u002Fa\\u003E\\u003Cdiv class=\\\"dropdown-profile\\\"\\u003E\\u003Cimg class=\\\"dropdown-profile__image\\\" src=\\\"..\\u002F..\\u002Fassets\\u002FprofileDropdown.png\\\"\\u003E\\u003Cdiv class=\\\"dropdown-profile__content\\\"\\u003E\";\n// iterate headerIcons\n;(function(){\n  var $$obj = headerIcons;\n  if ('number' == typeof $$obj.length) {\n      for (var pug_index1 = 0, $$l = $$obj.length; pug_index1 < $$l; pug_index1++) {\n        var i = $$obj[pug_index1];\npug_html = pug_html + \"\\u003Ca\" + (pug.attr(\"class\", pug.classes(['item__dropdown-profile ' +  i.className], [true]), false, true)) + \"\\u003E\" + (pug.escape(null == (pug_interp = i.title) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\";\n      }\n  } else {\n    var $$l = 0;\n    for (var pug_index1 in $$obj) {\n      $$l++;\n      var i = $$obj[pug_index1];\npug_html = pug_html + \"\\u003Ca\" + (pug.attr(\"class\", pug.classes(['item__dropdown-profile ' +  i.className], [true]), false, true)) + \"\\u003E\" + (pug.escape(null == (pug_interp = i.title) ? \"\" : pug_interp)) + \"\\u003C\\u002Fa\\u003E\";\n    }\n  }\n}).call(this);\n\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\n}\nelse {\npug_html = pug_html + \"\\u003Cdiv class=\\\"header-form__profile\\\"\\u003E\\u003Ca class=\\\"header-form__profile__link\\\" href=\\\"\\u002Fsearch\\\"\\u003E\\u003Cimg src=\\\"..\\u002F..\\u002Fassets\\u002Fsearch.png\\\"\\u003E\\u003C\\u002Fa\\u003E\\u003Ca class=\\\"header-form__profile__link\\\" href=\\\"\\u002Flogin\\\"\\u003E\\u003Cimg src=\\\"..\\u002F..\\u002Fassets\\u002Funlogined.png\\\"\\u003E\\u003C\\u002Fa\\u003E\\u003C\\u002Fdiv\\u003E\";\n}\npug_html = pug_html + \"\\u003C\\u002Fheader\\u003E\" + (null == (pug_interp = require(\"../../components/Underline/Underline.pug\").call(this, locals)) ? \"\" : pug_interp) + \"\\u003Cdiv class=\\\"content\\\"\\u003E\";\npug_mixins[\"TopSlider\"] = pug_interp = function(cardFilms){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\n// iterate cardFilms\n;(function(){\n  var $$obj = cardFilms;\n  if ('number' == typeof $$obj.length) {\n      for (var pug_index2 = 0, $$l = $$obj.length; pug_index2 < $$l; pug_index2++) {\n        var i = $$obj[pug_index2];\npug_html = pug_html + (null == (pug_interp = require(\"../../components/FilmCard/FilmCard.pug\").call(this, locals)) ? \"\" : pug_interp);\n      }\n  } else {\n    var $$l = 0;\n    for (var pug_index2 in $$obj) {\n      $$l++;\n      var i = $$obj[pug_index2];\npug_html = pug_html + (null == (pug_interp = require(\"../../components/FilmCard/FilmCard.pug\").call(this, locals)) ? \"\" : pug_interp);\n    }\n  }\n}).call(this);\n\n};\npug_mixins[\"BottomSlider\"] = pug_interp = function(content){\nvar block = (this && this.block), attributes = (this && this.attributes) || {};\n// iterate content\n;(function(){\n  var $$obj = content;\n  if ('number' == typeof $$obj.length) {\n      for (var pug_index3 = 0, $$l = $$obj.length; pug_index3 < $$l; pug_index3++) {\n        var i = $$obj[pug_index3];\npug_html = pug_html + (null == (pug_interp = require(\"../../components/SuggestionCard/SuggestionCard.pug\").call(this, locals)) ? \"\" : pug_interp);\n      }\n  } else {\n    var $$l = 0;\n    for (var pug_index3 in $$obj) {\n      $$l++;\n      var i = $$obj[pug_index3];\npug_html = pug_html + (null == (pug_interp = require(\"../../components/SuggestionCard/SuggestionCard.pug\").call(this, locals)) ? \"\" : pug_interp);\n    }\n  }\n}).call(this);\n\n};\npug_html = pug_html + \"\\u003Cdiv class=\\\"item__page-title\\\"\\u003EС наивысшим рейтингом\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"container\\\"\\u003E\";\npug_mixins[\"TopSlider\"](cardFilms);\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\" + (null == (pug_interp = require(\"../../components/SuggestionBar/SuggestionBar.pug\").call(this, locals)) ? \"\" : pug_interp) + \"\\u003Cdiv class=\\\"item__page-title\\\"\\u003EНовые фильмы\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"suggestion-film__list new_films\\\"\\u003E\";\npug_mixins[\"BottomSlider\"](newFilms);\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"item__page-title\\\"\\u003EНовые сериалы\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"suggestion-film__list new_series\\\"\\u003E\";\npug_mixins[\"BottomSlider\"](newSeries);\npug_html = pug_html + \"\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\";\n    }.call(this, \"cardFilms\" in locals_for_with ?\n        locals_for_with.cardFilms :\n        typeof cardFilms !== 'undefined' ? cardFilms : undefined, \"isAuthorized\" in locals_for_with ?\n        locals_for_with.isAuthorized :\n        typeof isAuthorized !== 'undefined' ? isAuthorized : undefined, \"newFilms\" in locals_for_with ?\n        locals_for_with.newFilms :\n        typeof newFilms !== 'undefined' ? newFilms : undefined, \"newSeries\" in locals_for_with ?\n        locals_for_with.newSeries :\n        typeof newSeries !== 'undefined' ? newSeries : undefined));\n    ;;return pug_html;};\nmodule.exports = template;","'use strict';\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n}\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '',\n    className,\n    padding = '',\n    escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '',\n    padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    return val + '';\n  }\n}\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (\n    val === false ||\n    val == null ||\n    (!val && (key === 'class' || key === 'style'))\n  ) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  var type = typeof val;\n  if (\n    (type === 'object' || type === 'function') &&\n    typeof val.toJSON === 'function'\n  ) {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + \"='\" + val.replace(/'/g, '&#39;') + \"'\";\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n}\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse) {\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n}\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html) {\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34:\n        escape = '&quot;';\n        break;\n      case 38:\n        escape = '&amp;';\n        break;\n      case 60:\n        escape = '&lt;';\n        break;\n      case 62:\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n}\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str) {\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  var context, lines, start, end;\n  try {\n    str = str || require('fs').readFileSync(filename, {encoding: 'utf8'});\n    context = 3;\n    lines = str.split('\\n');\n    start = Math.max(lineno - context, 0);\n    end = Math.min(lines.length, lineno + context);\n  } catch (ex) {\n    err.message +=\n      ' - could not read from ' + filename + ' (' + ex.message + ')';\n    pug_rethrow(err, null, lineno);\n    return;\n  }\n\n  // Error context\n  context = lines\n    .slice(start, end)\n    .map(function(line, i) {\n      var curr = i + start + 1;\n      return (curr == lineno ? '  > ' : '    ') + curr + '| ' + line;\n    })\n    .join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  try {\n    err.message =\n      (filename || 'Pug') +\n      ':' +\n      lineno +\n      '\\n' +\n      context +\n      '\\n\\n' +\n      err.message;\n  } catch (e) {}\n  throw err;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/** Class representing event bus, need for MVC model. */\nclass EventBus {\n    /**\n     * Create event bus with empty listeners.\n     */\n    constructor() {\n        this._listeners = {};\n    }\n\n    /**\n     * Subscribe event to event bus.\n     * @param {string} event - Name of new event.\n     * @param {function} callback - Callback function.\n     */\n    on(event, callback) {\n        (this._listeners[event] || (this._listeners[event] = new Map())).set(callback.name, callback);\n    }\n\n    /**\n     * Unsubscribe event from event bus.\n     * @param {string} event - Name of event.\n     * @param {function} callback - Callback function.\n     */\n    off(event, callback) {\n        this._listeners[event] = this._listeners[event]\n            ?.delete(callback.name);\n    }\n\n    /**\n     * Emit event from event bus.\n     * @param {string} event - Name of event.\n     * @param {any} data - Data for callback function.\n     */\n    emit(event, ...data) {\n        this._listeners[event]?.forEach((listener) => {\n            listener(...data);\n        });\n    }\n}\n\nexport const eventBus = new EventBus();\n","/** Abstract class representing base view. */\nexport class BaseView {\n    /**\n     * Create a home page view.\n     * @param {EventBus} eventBus - Global Event Bus.\n     * @param {Object} - Parameters for view.\n     */\n    constructor(eventBus, { data = {} } = {}) {\n        this._data = data;\n        this.eventBus = eventBus;\n    }\n}\n","import { APPLICATION } from '../../main.js';\nimport { BaseView } from '../BaseView/BaseView.js';\n\n/** Class representing a login page view. */\nexport class LogInView extends BaseView {\n    /**\n     * Create a login page view.\n     * @param {Object} - Parameters for render login view.\n     * @param {EventBus} eventBus - Global Event Bus.\n     */\n    constructor(eventBus, { data = {} } = {}) {\n        super(eventBus, data);\n        this.eventBus.on('login:render', this.render);\n    }\n\n    /**\n     * Render html login page from pug template.\n     */\n    render = () => {\n        const template = puglatizer.views.LogIn.LogIn();\n        APPLICATION.innerHTML = template;\n        this.setEventListeners();\n    }\n\n    /**\n     * Set event listeners.\n     */\n    setEventListeners = () => {\n        const [form] = document.getElementsByTagName('form');\n        const [aTag] = document.getElementsByClassName('have-acc__link');\n\n        const formHandler = (event) => {\n            event.preventDefault();\n            this.eventBus.emit(\n                'login:loginUser',\n                form,\n                document.getElementById('email').value,\n                document.getElementById('password').value\n            );\n        };\n\n        const aTagHandler = (event) => {\n            event.preventDefault();\n            this.eventBus.emit('login:removeEventListeners');\n            this.eventBus.emit('signup:render');\n        };\n\n        form?.addEventListener(('submit'), formHandler);\n\n        aTag?.addEventListener(('click'), aTagHandler);\n\n        const removeEventListeners = () => {\n            form?.removeEventListener(('submit'), formHandler);\n            aTag?.removeEventListener(('click'), aTagHandler);\n        };\n\n        this.eventBus.on('login:removeEventListeners', removeEventListeners);\n    }\n}\n","/**\n * Check validation of form.\n * Calls others functions to check validations of every type of input.\n * @param {Element} form - form for validation.\n * @returns {boolean} - is valid form or not.\n */\nexport const isValidForm = (form) => {\n\n    if (!form) {\n        return false;\n    }\n\n    const inputs = form.querySelectorAll('.input-wrapper__input');\n\n    inputs.forEach((input) => {\n        const error = document.getElementById(input.id + 'Error');\n        if (error) {\n            error.textContent = '';\n            input.classList.remove('input-wrapper__input_error');\n        }\n    });\n\n    let isValid = true;\n\n    inputs.forEach((input) => {\n        const errorDiv = document.getElementById(input.id + 'Error');\n        if (errorDiv) {\n            if (!input.value) {\n                errorDiv.textContent = 'Это поле обязательно к заполнению';\n                input.classList.add('input-wrapper__input_error');\n                isValid = false;\n                return;\n            }\n            switch (input.id) {\n            case 'email':\n                isValid &&= isValidEmail(input, errorDiv);\n                return;\n            case 'login':\n                isValid &&= isValidLogin(input, errorDiv);\n                return;\n            case 'password':\n                isValid &&= isValidPassword(input, errorDiv);\n                return;\n            case 'confirmPassword':\n                isValid &&= isValidConfirmPassword(input, errorDiv);\n                return;\n            case 'firstName':\n                isValid &&= isValidName(input, errorDiv);\n                return;\n            case 'secondName':\n                isValid &&= isValidName(input, errorDiv);\n                return;\n            }\n        }\n    });\n\n    return isValid;\n};\n\n/**\n * Check validation of inputted login.\n * @param {Element} loginInput - element login input to be validated.\n * @param {HTMLElement} errorDiv - div element, where will be printed message of error.\n * @returns {boolean} - is valid login form or not.\n */\nconst isValidLogin = (loginInput, errorDiv) => {\n    if (!/^[a-zA-Z](.[a-zA-Z0-9]*)$/.test(loginInput.value)) {\n        errorDiv.textContent = 'Логин должен содержать только латинские буквы и цифры';\n        loginInput.classList.add('input-wrapper__input_error');\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check validation of inputted name.\n * @param {Element} nameInput - element name input to be validated.\n * @param {HTMLElement} errorDiv - div element, where will be printed message of error.\n * @returns {boolean} - is valid name form or not.\n */\nconst isValidName = (nameInput, errorDiv) => {\n    if (!/^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-' ]+[a-zA-Zа-яА-Я']?$/.test(nameInput.value)) {\n        errorDiv.textContent = 'Некорректно введены данные';\n        nameInput.classList.add('input-wrapper__input_error');\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check validation of inputted email.\n * @param {Element} emailInput - element email input to be validated.\n * @param {HTMLElement} errorDiv - div element, where will be printed message of error.\n * @returns {boolean} - is valid email form or not.\n */\nconst isValidEmail = (emailInput, errorDiv) => {\n    if (!/^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/.test(emailInput.value)) {\n        errorDiv.textContent = 'Введен некорректный email';\n        emailInput.classList.add('input-wrapper__input_error');\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check validation of inputted password.\n * @param {Element} passwordInput - element login input to be validated.\n * @param {HTMLElement} errorDiv - div element, where will be printed message of error.\n * @returns {boolean} - is valid password form or not.\n */\nconst isValidPassword = (passwordInput, errorDiv) => {\n    if (passwordInput.value.length < 8 || passwordInput.value.length > 50) {\n        errorDiv.textContent = 'Пароль должен быть длиной от 8 до 50 символов';\n        passwordInput.classList.add('input-wrapper__input_error');\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check validation of inputted password for confirmation.\n * @param {Element} confirmPasswordInput - element password for confirmation input to be validated.\n * @param {HTMLElement} errorDiv - div element, where will be printed message of error.\n * @returns {boolean} - is valid confirm password form or not.\n */\nconst isValidConfirmPassword = (confirmPasswordInput, errorDiv) => {\n    const password = document.getElementById('password').value;\n\n    if (confirmPasswordInput.value !== password) {\n        errorDiv.textContent = 'Пароли не совпадают!';\n        confirmPasswordInput.classList.add('input-wrapper__input_error');\n        return false;\n    }\n    return true;\n};\n","// eslint-disable-next-line no-unused-vars\nconst localUrl = 'http://localhost:8081';\n\n// eslint-disable-next-line no-unused-vars\nconst deployUrl = 'https://redioteka.com';\n\nconst NUMBER_OF_TOP_SLIDER_CONTENT = 5;\nconst NUMBER_OF_BOTTOM_SLIDER_CONTENT = 10;\n\nexport const currentUrl = localUrl;\n\nexport const URLS = {\n    pages: {\n        main: '/',\n        profile: '/profile',\n    },\n    api: {\n        me: `${currentUrl}/api/me`,\n        media: `${currentUrl}/api/media/movie/`,\n        logout: `${currentUrl}/api/users/logout`,\n        login: `${currentUrl}/api/users/login`,\n        signup: `${currentUrl}/api/users/signup`,\n        profile: `${currentUrl}/api/users/`,\n        newSeries: `${currentUrl}/api/media/category/newSeries?limit=${NUMBER_OF_BOTTOM_SLIDER_CONTENT}&type=series`,\n        newFilms: `${currentUrl}/api/media/category/newFilms?limit=${NUMBER_OF_BOTTOM_SLIDER_CONTENT}&type=movie`,\n        topFilmsAndSeries: `${currentUrl}/api/media/category/top?limit=${NUMBER_OF_TOP_SLIDER_CONTENT}`,\n    }\n};\n","import { currentUrl } from '../consts/urls.js';\n\n/**\n * Make object for render detail info about film from json.\n * @param {Object} jsonFilm - Info about film from json.\n * @return {Object} - Object for render detail info about film.\n */\nexport const filmJsonToFilm = (jsonFilm) => {\n    const filmKeys = ['title', 'type', 'year', 'genres', 'director', 'countries', 'actors', 'description'];\n    const film = {\n        movieAvatar: `${currentUrl}${jsonFilm.movie_avatar}`,\n        rating: jsonFilm.rating ? `Положительных оценок ${jsonFilm.rating}` : '',\n    };\n\n    filmKeys.forEach((value) => {\n        film[value] = jsonFilm[value];\n    });\n    return film;\n};\n\n/**\n * Make array of object for render top slider from respond json.\n * @param {Array} arrayFilms - Info about film from json.\n * @return {Array} - Array of objects for render top slider.\n */\nexport const arrayFilmsToFilmCards = (arrayFilms) => {\n    const filmCards = [];\n\n    arrayFilms.reduce((_, jsonFilm) => {\n        filmCards.push({\n            id: jsonFilm.id,\n            title: jsonFilm.title,\n            description: jsonFilm.description,\n            movieAvatar: `${currentUrl}${jsonFilm.movie_avatar}`,\n            stars: '* '.repeat(jsonFilm.rating),\n            href: `/movie/${jsonFilm.id}`,\n        });\n    });\n\n    return filmCards;\n};\n\n/**\n * Make array of object for render bottom slider from respond json.\n * @param {Array} arrayContent - Info about film from json.\n * @return {Object} - Array of objects for render bottom slider.\n */\nexport const arrayContentToNewFilmsSeries = (arrayContent) => {\n    const newFilmsSeries = [];\n\n    arrayContent.reduce((_, jsonFilm) => {\n        newFilmsSeries.push({\n            id: jsonFilm.id,\n            title: jsonFilm.title,\n            movieAvatar: `${currentUrl}${jsonFilm.movie_avatar}`,\n            status: jsonFilm.is_free ? 'Бесплатно' : 'Подписка',\n            href: `/movie/${jsonFilm.id}`,\n        });\n    });\n\n    return newFilmsSeries;\n};\n","import { URLS } from '../consts/urls.js';\nimport { filmJsonToFilm, arrayFilmsToFilmCards, arrayContentToNewFilmsSeries } from './adapters.js';\n\n/**\n * Send async request to the server.\n * @param {Object} params - parameters for request.\n * @returns {Object} - returns status and parsed response.\n */\nconst sendRequest = async ({ url, method, body } = {}) => {\n    const response = await fetch(url, {\n        method: method,\n        body: body,\n        mode: 'cors',\n        credentials: 'include',\n    });\n\n    const parsedJson = await response.json();\n\n    return {\n        status: response.status,\n        parsedJson,\n    };\n};\n\n/**\n * Send async post request using async func.\n * @param {string} email - email parameter for request.\n * @param {string} password - password parameter for request.\n * @returns {boolean} - flag success of request.\n */\nconst postUserForLogin = async (email, password) => {\n    if (!email || !password) {\n        return false;\n    }\n\n    const params = {\n        url: URLS.api.login,\n        method: 'POST',\n        body: JSON.stringify({\n            email: email,\n            password: password\n        })\n    };\n\n    try {\n        const response = await sendRequest(params);\n        return response.status === 200;\n    } catch (err) {\n        return false;\n    }\n};\n\n/**\n * Send async post request using async func.\n * @param {string} username - username parameter for request.\n * @param {string} email - email parameter for request.\n * @param {string} password - password parameter for request.\n * @param {string} confirmPassword - confirm password parameter for request.\n * @returns {boolean} - flag success of request.\n */\nconst postUserForSignUp = async (username, email, password, confirmPassword) => {\n    if (!username || !email || !password || !confirmPassword) {\n        return false;\n    }\n\n    const params = {\n        url: URLS.api.signup,\n        method: 'POST',\n        credentials: 'include',\n        body: JSON.stringify({\n            username: username,\n            email: email,\n            password: password,\n            confirm_password: confirmPassword\n        })\n    };\n\n    try {\n        const response = await sendRequest(params);\n        return response.status === 200;\n    } catch (err) {\n        return false;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {Promise} - user id if you authorized, null in another case.\n */\nconst getCurrentUser = async () => {\n    const params = {\n        url: URLS.api.me,\n        method: 'GET',\n        credentials: 'include',\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return responseBody.id;\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {boolean} - flag success of request.\n */\nconst getLogout = async () => {\n    const params = {\n        url: URLS.api.logout,\n        method: 'GET',\n        credentials: 'include',\n    };\n\n    try {\n        const response = await sendRequest(params);\n        return response.status === 200;\n    } catch (err) {\n        return false;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {Object} - response body with login, email and src of avatar.\n */\nconst getProfile = async (idUser) => {\n    if (!idUser) {\n        return null;\n    }\n\n    const params = {\n        url: URLS.api.profile + idUser,\n        method: 'GET',\n        credentials: 'include'\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return responseBody;\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\n/**\n * Send async post request using async func.\n * @param {string} idUser - user id parameter for request.\n * @param {FormData} formPut - avatar for request.\n * @returns {string} - src of avatar.\n */\nconst postAvatar = async (idUser, formPut) => {\n    if (!idUser || !formPut) {\n        return null;\n    }\n\n    const params = {\n        url: URLS.api.profile + idUser + '/avatar',\n        method: 'PUT',\n        credentials: 'include',\n        body: formPut\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return responseBody.user_avatar;\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\n/**\n * Send async patch request using async func.\n * @param {string} idUser - user id parameter for request.\n * @param {string} email - email parameter for request.\n * @param {string} login - login parameter for request.\n * @returns {boolean} - flag success of request.\n */\nconst patchProfile = async (idUser, email, login) => {\n    if (!idUser || !email || !login) {\n        return null;\n    }\n\n    const params = {\n        url: URLS.api.profile + idUser,\n        method: 'PATCH',\n        credentials: 'include',\n        body: JSON.stringify({\n            email: email,\n            username: login\n        })\n    };\n\n    try {\n        const response = await sendRequest(params);\n        return response.status === 200;\n    } catch (err) {\n        return false;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {Object} - detail info about film in object.\n */\nconst getDetailFilmPage = async (filmId) => {\n    const params = {\n        url: URLS.api.media + filmId,\n        method: 'GET',\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return filmJsonToFilm(responseBody);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {Array} - Array of objects for render top slider.\n */\nconst getTopFilmsAndSeries = async () => {\n    const params = {\n        url: URLS.api.topFilmsAndSeries,\n        method: 'GET'\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return arrayFilmsToFilmCards(responseBody.top);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {Array} - Array of objects new films.\n */\nconst getNewFilms = async () => {\n    const params = {\n        url: URLS.api.newFilms,\n        method: 'GET'\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return arrayContentToNewFilmsSeries(responseBody.newFilms);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\n/**\n * Send async get request using async func.\n * @returns {Array} - Array of objects new series.\n */\nconst getNewSeries = async () => {\n    const params = {\n        url: URLS.api.newSeries,\n        method: 'GET'\n    };\n\n    try {\n        const { status: responseStatus, parsedJson: responseBody} = await sendRequest(params);\n        if (responseStatus === 200) {\n            return arrayContentToNewFilmsSeries(responseBody.newSeries);\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n};\n\nexport {\n    postUserForLogin,\n    postUserForSignUp,\n    getCurrentUser,\n    getLogout,\n    getProfile,\n    postAvatar,\n    patchProfile,\n    getDetailFilmPage,\n    getTopFilmsAndSeries,\n    getNewFilms,\n    getNewSeries\n};\n","import { isValidForm } from '../modules/isValidForm.js';\nimport { postUserForLogin } from '../modules/http.js';\n\n/** Class representing login page model. */\nexport class LogInModel {\n    /**\n     * Create a login page model.\n     * @param {EventBus} eventBus - Global Event Bus.\n     */\n    constructor(eventBus) {\n        this.eventBus = eventBus;\n        this.eventBus.on('login:loginUser', this.loginUser);\n    }\n\n    /**\n     * Login user and in success case render home page.\n     * @param {HTMLFontElement} form - Form for login, need to validation\n     * @param {string} email - User email, need to post request.\n     * @param {string} password - User password, need to post request.\n     */\n    loginUser = (form, email, password) => {\n        const isValid = isValidForm(form);\n\n        if (isValid) {\n            postUserForLogin(\n                email,\n                password\n            ).then((responseFlag) => {\n                if (responseFlag) {\n                    this.eventBus.emit('login:removeEventListeners');\n                    this.eventBus.emit('homepage:render');\n                } else {\n                    this.eventBus.emit('homepage:renderErrorPage');\n                }\n            }).catch(() => {\n                this.eventBus.emit('homepage:renderErrorPage');\n            });\n        }\n    }\n}\n","class Controller {\n    constructor() { }\n}\n\nexport default Controller;","import { isValidForm } from '../modules/isValidForm.js';\nimport { postUserForSignUp } from '../modules/http.js';\n\n/** Class representing signup page model. */\nexport class SignUpModel {\n    /**\n     * Create a signup page model.\n     * @param {EventBus} eventBus - Global Event Bus.\n     */\n    constructor(eventBus) {\n        this.eventBus = eventBus;\n        this.eventBus.on('signup:signUpUser', this.signUpUser);\n    }\n\n    /**\n     * Signup user and in success case render home page.\n     * @param {HTMLFontElement} form - Form for signup, need to validation\n     * @param {string} email - User email, need to post request.\n     * @param {string} password - User password, need to post request.\n     * @param {string} confirmPassword - User confirm password, need to post request.\n     */\n    signUpUser = (form, login, email, password, confirmPassword) => {\n        const isValid = isValidForm(form);\n\n        if (isValid) {\n            postUserForSignUp(\n                login,\n                email,\n                password,\n                confirmPassword\n            ).then((responseFlag) => {\n                if (responseFlag) {\n                    this.eventBus.emit('signup:removeEventListeners');\n                    this.eventBus.emit('homepage:render');\n                } else {\n                    this.eventBus.emit('homepage:renderErrorPage');\n                }\n            }).catch(() => {\n                this.eventBus.emit('homepage:renderErrorPage');\n            });\n        }\n    }\n}\n","import { APPLICATION } from '../../main.js';\nimport { BaseView } from '../BaseView/BaseView.js';\n\n/** Class representing a signup page view. */\nexport class SignUpView extends BaseView {\n    /**\n     * Create a signup page view.\n     * @param {EventBus} eventBus\n     * @param {Object} - Parameters for render signup view.\n     */\n    constructor(eventBus, { data = {} } = {}) {\n        super(eventBus, data);\n        this.eventBus.on('signup:render', this.render);\n    }\n\n    /**\n     * Render html signup page from pug template.\n     */\n    render = () => {\n        const template = puglatizer.views.SignUp.SignUp();\n        APPLICATION.innerHTML = template;\n        this.setEventListeners();\n    }\n\n    /**\n     * Setting event listeners.\n     */\n    setEventListeners = () => {\n        const [form] = document.getElementsByTagName('form');\n        const [aTag] = document.getElementsByClassName('have-acc__link');\n\n        const formHandler = (event) => {\n            event.preventDefault();\n\n            this.eventBus.emit(\n                'signup:signUpUser',\n                form,\n                document.getElementById('login').value,\n                document.getElementById('email').value,\n                document.getElementById('password').value,\n                document.getElementById('confirmPassword').value\n            );\n        };\n\n        const aTagHandler = (event) => {\n            event.preventDefault();\n\n            this.eventBus.emit('signup:removeEventListeners');\n            this.eventBus.emit('login:render');\n        };\n\n        form?.addEventListener(('submit'), formHandler);\n\n        aTag?.addEventListener(('click'), aTagHandler);\n\n        const removeEventListeners = () => {\n            form?.removeEventListener(('submit'), formHandler);\n            aTag?.removeEventListener(('click'), aTagHandler);\n        };\n\n        this.eventBus.on('signup:removeEventListeners', removeEventListeners);\n    }\n}\n","import { getProfile, getCurrentUser, postAvatar, patchProfile } from '../modules/http.js';\nimport { isValidForm } from '../modules/isValidForm.js';\n\n/** Class representing profile page model. */\nexport class ProfileModel {\n    /**\n     * Create a profile page model.\n     * @param {EventBus} eventBus - Global Event Bus.\n     */\n    constructor(eventBus) {\n        this.eventBus = eventBus;\n        this.eventBus.on('profile:getInfoAboutCurrentUser', this.getInfoAboutCurrentUser);\n        this.eventBus.on('profile:getInfoForProfile', this.getInfoForProfile);\n        this.eventBus.on('profile:saveChanges', this.saveChanges);\n    }\n\n    /**\n     * Call func to full info about logged user for render profile page in success case.\n     * In other case, rerender home page.\n     */\n    getInfoAboutCurrentUser = () => {\n        getCurrentUser().then((idUser) => {\n            if (idUser) {\n                this.eventBus.emit('profile:getInfoForProfile', idUser);\n            } else {\n                this.eventBus.emit('homepage:render');\n            }\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    }\n\n    /**\n     * Get full info about user and emit render profile page.\n     * @param {string} idUser - Current user id.\n     */\n    getInfoForProfile = (idUser) => {\n        getProfile(idUser).then((responseBody) => {\n            if (responseBody) {\n                const params = {\n                    login: responseBody.username,\n                    email: responseBody.email,\n                    user_avatar: responseBody.avatar ?? 'img/user.png',\n                };\n\n                this.eventBus.emit('profile:renderProfileInfo', params);\n                this.eventBus.emit('profile:setEventListeners', idUser);\n            } else {\n                this.eventBus.emit('homepage:renderErrorPage');\n            }\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    }\n\n    /**\n     * Update avatar and emit render new avatar.\n     * @param {string} idUser - Current user id.\n     * @param {HTMLElement} avatarInput - Avatar input field.\n     */\n    updateAvatar = (idUser, avatarInput) => {\n        const [avatar] = avatarInput.files;\n        if (avatar) {\n            const formPut = new FormData();\n            formPut.append('avatar', avatar);\n\n            const { avatarSrc } =  postAvatar(idUser, formPut);\n\n            if (avatarSrc) {\n                this.eventBus.emit('profile:renderNewAvatar', avatarSrc);\n            }\n        }\n    }\n\n    /**\n     * Update profile info.\n     * @param {string} idUser - Current user id.\n     * @param {string} email - New user email.\n     * @param {string} login - New user login.\n     * @param {HTMLFormElement} form - Profile page form.\n     */\n    updateProfileInfo = (idUser, email, login, form) => {\n        patchProfile(\n            idUser,\n            email,\n            login\n        ).then((responseStatus) => {\n            if (responseStatus) {\n                this.eventBus.emit('profile:updateProfile', form);\n            }\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    }\n\n    /**\n     * Calls when was submitted profile form button, save all changes.\n     * @param {string} idUser - Current user id.\n     * @param {HTMLFormElement} form - Profile page form.\n     * @param {HTMLElement} avatarInput - Avatar input field.\n     * @param {string} email - New user email.\n     * @param {string} login - New user login.\n     */\n    saveChanges = (idUser, form, avatarInput, email, login) => {\n        const isValid = isValidForm(form);\n        if (isValid) {\n            if (avatarInput.value) {\n                this.updateAvatar(idUser, avatarInput);\n            }\n            this.updateProfileInfo(idUser, email, login, form);\n        }\n    }\n}\n","import { APPLICATION } from '../../main.js';\nimport { BaseView } from '../BaseView/BaseView.js';\n\n/** Class representing a profile page view. */\nexport class ProfileView extends BaseView {\n    /**\n     * Create a profile page view.\n     * @param {EventBus} eventBus - Global Event Bus.\n     * @param {Object} - Parameters for render profile view.\n     */\n    constructor(eventBus, { data = {} } = {}) {\n        super(eventBus, data);\n        this.eventBus.on('profile:render', this.render);\n        this.eventBus.on('profile:renderProfileInfo', this.renderProfileInfo);\n        this.eventBus.on('profile:setEventListeners', this.setEventListeners);\n        this.eventBus.on('profile:renderNewAvatar', this.renderNewAvatar);\n        this.eventBus.on('profile:updateProfile', this.updateProfile);\n    }\n\n    /**\n\t * Render html profile page from pug template.\n\t */\n    render = () => {\n        const template = puglatizer.components.Loader.Loader();\n        APPLICATION.innerHTML = template;\n        this.eventBus.emit('profile:getInfoAboutCurrentUser');\n        this.eventBus.emit('homepage:InfoForHeader');\n    }\n\n    /**\n     * Render html profile info from pug template to content div.\n     * @param {Object} params - Profile data.\n     */\n    renderProfileInfo = (params) => {\n        this._data = {\n            profileData: params\n        };\n        const template = puglatizer.components.ProfileContent.ProfileContent(this._data);\n        const content = document.querySelector('.content');\n        if (content) {\n            content.innerHTML = template;\n        } else {\n            this.eventBus.emit('homepage:renderErrorPage');\n        }\n    }\n\n    /**\n     * Render avatar from pug template.\n     * @param {string} avatarSrc - Source of new avatar.\n     */\n    renderNewAvatar = (avatarSrc) => {\n        const imgAvatar = document.getElementById('avatar');\n        imgAvatar.src = avatarSrc;\n    }\n\n    /**\n     * Setting for input form and button.\n     * @param {HTMLFormElement} form - Form element that will be updated.\n     */\n    updateProfile = (form) => {\n        const [nick] = document.getElementsByClassName('title-wrapper__nickname');\n        const [button] = document.getElementsByClassName('input-wrapper__button');\n        const inputs = form.querySelectorAll('.input-wrapper__input');\n\n        nick.textContent = document.getElementById('login').value;\n        button.textContent = 'Редактировать';\n\n        inputs.forEach((input) => {\n            input.classList.add('input-wrapper__input_disabled');\n            input.disabled = true;\n        });\n    }\n\n    /**\n     * Set event listeners.\n     * @param {string} idUser - idUser that needed for render some data.\n     */\n    setEventListeners = (idUser) => {\n        const imgAvatar = document.getElementById('avatar');\n\n        const [form] = document.getElementsByTagName('form');\n        const [button] = document.getElementsByClassName('input-wrapper__button');\n\n        const imgHandler = () => {\n            imgAvatar.src='img/user.png';\n        };\n\n        imgAvatar.addEventListener('error', imgHandler);\n\n        const formHandler = (event) => {\n            event.preventDefault();\n\n            const inputs = form.querySelectorAll('.input-wrapper__input');\n\n            if (button.textContent === 'Редактировать') {\n                button.textContent = 'Сохранить';\n                inputs.forEach((input) => {\n                    input.classList.remove('input-wrapper__input_disabled');\n                    input.disabled = false;\n                });\n            } else if (button.textContent === 'Сохранить') {\n                const avatarInput = document.getElementById('file');\n                const email = document.getElementById('email').value;\n                const login = document.getElementById('login').value;\n\n                this.eventBus.emit('profile:saveChanges', idUser, form, avatarInput, email, login);\n            }\n        };\n\n        form?.addEventListener(('submit'), formHandler);\n\n        const removeEventListeners = () => {\n            form?.removeEventListener(('submit'), formHandler);\n            imgAvatar.removeEventListener('error', imgHandler);\n        };\n\n        this.eventBus.on('profile:removeEventListeners', removeEventListeners);\n    }\n}\n","import { getCurrentUser, getLogout, getNewFilms, getNewSeries, getTopFilmsAndSeries } from '../modules/http.js';\n\n/** Class representing home page model. */\nexport class HomePageModel {\n    /**\n     * Create a home page model.\n     * @param {EventBus} eventBus - Global Event Bus.\n     */\n    constructor(eventBus) {\n        this.eventBus = eventBus;\n        this.eventBus.on('homepage:InfoForHeader', this.getInfoForHeader);\n        this.eventBus.on('homepage:logout', this.logout);\n        this.eventBus.on('homepage:getMainPageContent', this.getMainPageContent);\n    }\n\n    /**\n     * Get info for main page about films, series and emit render content.\n     */\n    getMainPageContent = () => {\n        const topFilmsAndSeries = getTopFilmsAndSeries();\n        const newFilms = getNewFilms();\n        const newSeries = getNewSeries();\n        Promise.all([topFilmsAndSeries, newFilms, newSeries]).then((values) => {\n            const [topFilmsAndSeriesValue, newFilmsValue, newSeriesValue] = values;\n            this.eventBus.emit('homepage:renderContent', topFilmsAndSeriesValue, newFilmsValue, newSeriesValue);\n            this.eventBus.emit('homepage:setEventListeners');\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    }\n\n    /**\n     * Get info for main page about header and emit render header.\n     */\n    getInfoForHeader = () => {\n        getCurrentUser().then((idUser) => {\n            if (idUser) {\n                const data = {\n                    isAuthorized: true,\n                };\n                this.eventBus.emit('homepage:renderHeader', data);\n            } else {\n                const data = {\n                    isAuthorized: false,\n                };\n                this.eventBus.emit('homepage:renderHeader', data);\n            }\n            this.eventBus.emit('homepage:setEventListenersForHeader');\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    }\n\n    /**\n     * Logout user, and rerender home page.\n     */\n    logout = () => {\n        getLogout().then(() => {\n            this.eventBus.emit('homepage:render');\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    }\n}\n","import { APPLICATION } from '../../main.js';\nimport { BaseView } from '../BaseView/BaseView.js';\n\nimport HomeView from './HomeView.pug';\n\n/** Class representing home page view. */\nexport class HomePageView extends BaseView {\n    /**\n     * Create a home page view.\n     * @param {EventBus} eventBus - Global Event Bus.\n     * @param {Object}- Parameters for home page view.\n     */\n    constructor(eventBus, { data = {} } = {}) {\n        super(eventBus, data);\n        this.eventBus.on('homepage:render', this.render);\n        this.eventBus.on('homepage:renderHeader', this.renderHeader);\n        this.eventBus.on('homepage:setEventListeners', this.setEventListeners);\n        this.eventBus.on('homepage:setEventListenersForHeader', this.setEventListenersForHeader);\n        this.eventBus.on('homepage:renderContent', this.renderContent);\n        this.eventBus.on('homepage:renderErrorPage', this.renderErrorPage);\n    }\n    /**\n     * Render html home page from pug template.\n     */\n    render = () => {\n        const template = HomeView();\n        APPLICATION.innerHTML = template;\n        this.eventBus.emit('homepage:InfoForHeader');\n        this.eventBus.emit('homepage:getMainPageContent');\n    }\n\n    /**\n     * Render header from pug template.\n     * @param {Object} data - Contains flag of authorizing.\n     */\n    renderHeader = (data) => {\n        const template = puglatizer.components.Header.Header(data);\n        const [header] = document.getElementsByTagName('header');\n        if (header) {\n            header.outerHTML = template;\n        } else {\n            this.eventBus.emit('homepage:renderErrorPage');\n        }\n    }\n    /**\n     * Render content home page from pug template to content div.\n     */\n    renderContent = (cardFilms, newFilms, newSeries) => {\n        this._data = {\n            cardFilms,\n            newFilms,\n            newSeries,\n        };\n        const template = puglatizer.components.HomeContent.HomeContent(this._data);\n        const content = document.querySelector('.content');\n        if (content) {\n            content.innerHTML = template;\n        } else {\n            this.eventBus.emit('homepage:renderErrorPage');\n        }\n    }\n\n    /**\n     * Render error page from pug template.\n     */\n    renderErrorPage = () => {\n        const template = puglatizer.components.ErrorPage.ErrorPage();\n        APPLICATION.innerHTML = template;\n    }\n\n    /**\n     * Set event listeners for header.\n     */\n    setEventListenersForHeader = () => {\n        const removeAllListeners = () => {\n            this.eventBus.emit('homepage:removeEventListeners');\n            this.eventBus.emit('profile:removeEventListeners');\n            profileLink?.removeEventListener(('click'), profileLinkHandler);\n            loginPage?.removeEventListener(('click'), loginPageHandler);\n            logoutPage?.removeEventListener(('click'), logoutPageHandler);\n            aMain?.removeEventListener(('click'), aMainHandler);\n        };\n\n        const aMainHandler = (event) => {\n            this.eventBus.emit('homepage:removeEventListeners');\n            this.eventBus.emit('profile:removeEventListeners');\n            event.preventDefault();\n\n            this.eventBus.emit('homepage:getMainPageContent');\n        };\n\n        const profileLinkHandler = (event) => {\n            this.eventBus.emit('homepage:removeEventListeners');\n            this.eventBus.emit('profile:removeEventListeners');\n            event.preventDefault();\n\n            this.eventBus.emit('profile:getInfoAboutCurrentUser');\n        };\n        const loginPageHandler = (event) => {\n            removeAllListeners();\n            event.preventDefault();\n\n            this.eventBus.emit('login:render');\n        };\n        const logoutPageHandler = (event) => {\n            removeAllListeners();\n            event.preventDefault();\n\n            this.eventBus.emit('homepage:logout');\n        };\n\n        const profileLink = document.querySelector('.js-profile-page');\n        profileLink?.addEventListener(('click'), profileLinkHandler);\n\n        const loginPage = document.querySelector('.js-login-page');\n        loginPage?.addEventListener(('click'), loginPageHandler);\n\n        const logoutPage = document.querySelector('.js-logout-page');\n        logoutPage?.addEventListener(('click'), logoutPageHandler);\n\n        const [aMain] = document.getElementsByClassName('homePage');\n        aMain?.addEventListener(('click'), aMainHandler);\n    }\n\n    /**\n     * Set event listeners.\n     */\n    setEventListeners = () => {\n        const topFilmSeriesHandler = (event) => {\n            window.scrollTo(0, 0);\n            removeEventListeners();\n\n            const target = event.target.closest('.item__film-card');\n            event.preventDefault();\n\n            if (target) {\n                this.eventBus.emit('detailpage:getInfoAboutFilm', target.id.substr('top'.length));\n            }\n        };\n\n        const newFilmSeriesHandler = (event) => {\n            window.scrollTo(0, 0);\n            removeEventListeners();\n\n            const target = event.target.closest('.item__internal');\n            event.preventDefault();\n\n            if (target) {\n                this.eventBus.emit('detailpage:getInfoAboutFilm', target.id.substr('suggest'.length));\n            }\n        };\n\n        const [filmContainer] = document.getElementsByClassName('container');\n        filmContainer?.addEventListener(('click'), topFilmSeriesHandler);\n\n        const [newFilms] = document.getElementsByClassName('new_films');\n        newFilms?.addEventListener(('click'), newFilmSeriesHandler);\n\n        const [newSeries] = document.getElementsByClassName('new_series');\n        newSeries?.addEventListener(('click'), newFilmSeriesHandler);\n\n        const removeEventListeners = () => {\n            filmContainer?.removeEventListener(('click'), topFilmSeriesHandler);\n            newSeries?.removeEventListener(('click'), newFilmSeriesHandler);\n            newFilms?.removeEventListener(('click'), newFilmSeriesHandler);\n        };\n\n        this.eventBus.on('homepage:removeEventListeners', removeEventListeners);\n    }\n}\n","import { getDetailFilmPage } from '../modules/http.js';\n\n/** Class representing detail page about film model. */\nexport class DetailPageModel {\n    /**\n     * Create a detail page about film model.\n     * @param {EventBus} eventBus - Global Event Bus.\n     */\n    constructor(eventBus) {\n        this.eventBus = eventBus;\n        this.eventBus.on('detailpage:getInfoAboutFilm', this.getInfoAboutFilm);\n    }\n\n    /**\n     * Get info for detail page about film and emit render content.\n     * @param {string} filmId - Film id, needed to get info about film.\n     */\n    getInfoAboutFilm = (filmId) => {\n        getDetailFilmPage(filmId).then((film) => {\n            if (film) {\n                this.eventBus.emit('detailpage:renderDetailsAboutFilm', film);\n            } else {\n                this.eventBus.emit('homepage:renderErrorPage');\n            }\n        }).catch(() => {\n            this.eventBus.emit('homepage:renderErrorPage');\n        });\n    };\n}\n","import { APPLICATION } from '../../main.js';\nimport { BaseView } from '../BaseView/BaseView.js';\n\n/** Class representing film detail page view. */\nexport class DetailPageView extends BaseView {\n    /**\n     * Create a home page view.\n     * @param {EventBus} eventBus - Global Event Bus.\n     * @param {Object} - Parameters for film detail page view.\n     */\n    constructor(eventBus, { data = {} } = {}) {\n        super(eventBus, data);\n        this.eventBus.on('detailpage:render', this.render);\n        this.eventBus.on('detailpage:renderDetailsAboutFilm', this.renderDetailsAboutFilm);\n    }\n    /**\n     * Render html film detail page from pug template.\n     */\n    render = (data = {}) => {\n        const template = puglatizer.components.Loader.Loader();\n        APPLICATION.innerHTML = template;\n            this.eventBus.emit('detailpage:getInfoAboutFilm', '1');\n        this.eventBus.emit('homepage:getCurrentUser');\n    }\n\n    /**\n     * Render html film detail page from pug template into content div.\n     * @param {Object} filmData - Detail info about film in object.\n     */\n    renderDetailsAboutFilm = (filmData) => {\n        this._data = { filmData };\n        const template = puglatizer.components.DetailForm.DetailForm(this._data);\n        const content = document.querySelector('.content');\n        if (content) {\n            content.innerHTML = template;\n        } else {\n            this.eventBus.emit('homepage:renderErrorPage');\n        }\n    }\n}\n","export const Events = {\n    PathChanged: 'pathChanged',\n    RedirectBack: 'redirectBack',\n    RedirectForward: 'redirectForward',\n}","export const Routes = {\n    HomePage : '/home',\n    SignUpPage : '/signup',\n    LoginPage : '/login',\n    ProfilePage : '/profile',\n    MoviePage: '\\\\/movie\\\\/\\\\d+',\n}\n\nexport default Routes;","import { eventBus } from './modules/eventBus.js';\nimport { LogInController } from './controllers/logIn.js';\nimport { SignUpController } from './controllers/signUp.js';\nimport { ProfileController } from './controllers/profile.js';\nimport { HomePageController } from './controllers/homePage.js';\nimport { DetailPageController } from './controllers/detailPage.js';\nimport Router from './modules/router.js';\nimport Routes from './consts/routes.js';\n\nexport const APPLICATION = document.getElementById('app');\n\n/*eslint no-unused-vars: */\nconst signupController = new SignUpController();\nconst loginController = new LogInController();\nconst profileController = new ProfileController();\nconst homePageController = new HomePageController();\nconst detailPageController = new DetailPageController();\n\nconst router = new Router(APPLICATION);\n\nrouter.register(Routes.HomePage, homePageController)\n    .register(Routes.SignUpPage, signupController)\n    .register(Routes.LoginPage, loginController)\n    .register(Routes.ProfilePage, profileController)\n    .register(Routes.MoviePage, detailPageController)\n    .start();\n\n// eventBus.emit('homepage:render');\n","import { eventBus } from '../modules/eventBus.js';\nimport { SignUpModel } from '../models/signUp.js';\nimport { SignUpView } from '../views/SignUp/SignUp.js';\nimport Controller from './controller.js';\n\nexport class SignUpController extends Controller {\n    constructor() {\n        super(new Controller());\n        this.eventBus = eventBus;\n        this.model = new SignUpModel(this.eventBus);\n        this.view = new SignUpView(this.eventBus);\n    }\n}\n","import { eventBus } from '../modules/eventBus.js';\nimport { LogInView } from '../views/LogIn/LogIn.js';\nimport { LogInModel } from '../models/logIn.js';\nimport Controller from './controller.js';\n\nexport class LogInController extends Controller {\n    constructor() {\n        super(new Controller());\n        this.eventBus = eventBus;\n        this.model = new LogInModel(this.eventBus);\n        this.view = new LogInView(this.eventBus);\n    }\n}\n","import { eventBus } from '../modules/eventBus.js';\nimport { ProfileModel } from '../models/profile.js';\nimport { ProfileView } from '../views/Profile/Profile.js';\nimport Controller from './controller.js';\n\nexport class ProfileController extends Controller {\n    constructor() {\n        super(new Controller());\n        this.eventBus = eventBus;\n        this.model = new ProfileModel(this.eventBus);\n        this.view = new ProfileView(this.eventBus);\n    }\n}\n","import { eventBus } from '../modules/eventBus.js';\nimport { HomePageModel } from '../models/homePage.js';\nimport { HomePageView } from '../views/HomeView/HomeView.js';\nimport Controller from './controller.js';\n\nexport class HomePageController extends Controller {\n    constructor() {\n        super(new Controller());\n        this.eventBus = eventBus;\n        this.model = new HomePageModel(this.eventBus);\n        this.view = new HomePageView(this.eventBus);\n    }\n}\n","import { eventBus } from '../modules/eventBus.js';\nimport { DetailPageModel } from '../models/detailPage.js';\nimport { DetailPageView } from '../views/DetailView/DetailView.js';\nimport Controller from './controller.js';\n\nexport class DetailPageController extends Controller {\n    constructor() {\n        super(new Controller());\n        this.eventBus = eventBus;\n        this.model = new DetailPageModel(this.eventBus);\n        this.view = new DetailPageView(this.eventBus);\n    }\n}\n","import { eventBus } from './eventBus.js';\nimport { Events } from '../consts/events.js';\nimport Routes from '../consts/routes.js';\n\nclass Router {\n    constructor(app) {\n        this.application = app;\n        this.routes = [];\n        this.currentController = null;\n\n        eventBus.on(Events.PathChanged, this.onPathChanged.bind(this));\n        eventBus.on(Events.RedirectBack, this.back.bind(this));\n        eventBus.on(Events.RedirectForward, this.forward.bind(this));\n\n        document.getElementById('app').addEventListener('click', (e) => {\n            if (e.target.dataset.routlink) {\n                e.preventDefault();\n                this.changeRoute(e.target.dataset.routlink);\n            }\n        });\n    }\n\n    /**\n     * @function\n     * Регистрирует путь - добавляет в массив роутеров путь\n     * @return {this}\n     * @param {string} path - Путь, который нужно добавить\n     * @param {Controller} controller - Контроллер, который соответствует этому пути\n     */\n    register(path, controller) {\n        let routeObject = {\n            path,\n            controller,\n        };\n\n        this.routes.push(routeObject);\n\n        return this;\n    }\n\n    onPathChanged(data) {\n        this.go(data.path, data || {});\n    }\n\n    start() {\n        window.addEventListener('popstate', () => {\n            this.go(window.location.pathname + window.location.search);\n        });\n\n        this.go(window.location.pathname + window.location.search);\n    }\n\n    getRouteData(path) {\n        let targetController = null;\n        const result = this.getParam(path);\n        console.log(result);\n\n        this.routes.forEach(({path, controller}) => {\n            const res = result.path.match(path);\n\n            if (res) {\n                targetController = controller;\n            }\n        })\n\n        return {\n            controller: targetController,\n            path: {\n                path: result.path,\n                resourceId: +result.pathParams,\n            },\n        }\n    }\n\n    getParam(path) {\n        const reg = new RegExp(/\\d+/);\n        const result = path.match(reg);\n\n        const parsedURL = new URL(window.location.origin + path);\n        let pathParams = null;\n        let resultPath = parsedURL.pathname;\n\n        return {\n            path: resultPath,\n            pathParams: pathParams,\n        };\n    }\n\n    go(path, data = {}) {\n\n        const routeData = this.getRouteData(path);\n        data = {...data, ...routeData};\n\n        if (this.currentController === routeData.controller) {\n            console.log('Тот же контроллер');\n        }\n\n        if (this.currentController) {\n            console.log('Проверка');\n        }\n\n        this.currentController = routeData.controller;\n\n        if (!this.currentController) {\n            path = Routes.HomePage;\n            this.currentController = this.getRouteData(path).controller;\n        }\n\n        if (window.location.pathname !== path) {\n            window.history.pushState(null, null, path);\n        }\n\n        this.currentController.view.render();\n    }\n\n    back() {\n        window.history.back();\n    }\n\n    forward() {\n        window.history.forward();\n    }\n}\n\nexport default Router;\n"],"sourceRoot":""}